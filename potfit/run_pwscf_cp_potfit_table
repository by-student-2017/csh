#! /bin/csh -f

set num_core_pwscf = 4
set num_core_potfit = 0 # less than number of data in config. 0: auto 

set filename = $1
set potential_type = $2
set k_resolution = $3
if ("${k_resolution}" == "") then
  set k_resolution = 0.48
endif
echo "k-resolution: "${k_resolution}

echo -n "" > ${filename}.config
echo -n "" > ${filename}.pot
echo -n "" > param_file

echo "| Structure | Nc | Nat | W | Tmin-Tmax | Vmin-Vmax | Ncp | eDFT |" > output_table
echo "-----------------------------------------------------------------" >> output_table
echo "Configurations with attributed forces (CP + MD calculation)" >> output_table
set SCF_flag = 0

set num_data = 0
set cif_list = `grep "\.cif" table | sed "s/.cif.*//g"`
foreach cif_name_pre (${cif_list})
  # table data
  set cif_name = ${cif_name_pre}.cif
  set x      = `grep ${cif_name} table | awk '{printf "%d",$2}'`
  set y      = `grep ${cif_name} table | awk '{printf "%d",$3}'`
  set z      = `grep ${cif_name} table | awk '{printf "%d",$4}'`
  set weight = `grep ${cif_name} table | awk '{printf "%d",$5}'`
  set Tmin   = `grep ${cif_name} table | awk '{printf "%7.2f",$6}'`
  set Tmax   = `grep ${cif_name} table | awk '{printf "%7.2f",$7}'` 
  set NT     = `grep ${cif_name} table | awk '{printf "%d",$8}'` 
  set Vmax   = `grep ${cif_name} table | awk '{printf "%8.5f",($9/100)*(1/3)}'`
  set NV     = `grep ${cif_name} table | awk '{printf "%d",$10}'`
  set F_flag = `grep ${cif_name} table | awk '{printf "%d",$11}'`
  set Ncp    = `grep ${cif_name} table | awk '{printf "%d",$12}'` 
  set eDFT   = `grep ${cif_name} table | awk '{printf "%d",$13}'` 
  #
  set num_data = `echo "${num_data}+${NT}*${NV}" | bc`
  #
  set cif_folder_name = `echo $cif_name:r`
  #
  set i = 1
  while($i <= ${NV})
    set scale = `echo "1.00 - ${Vmax} + ${Vmax}/((${NV}+1)/2)*$i" | bc -l | awk '{printf "%5.3f",$0}'` 
    set j = 1
    while($j <= ${NT}) 
      set temp = `echo "${Tmin} + (${Tmax}-${Tmin})/${NT}*($j-1)" | bc -l | awk '{printf "%7.2f",$0}'`
      rm -f -r ${cif_folder_name}_L${scale}_${temp}K
      mkdir ${cif_folder_name}_L${scale}_${temp}K
      cp ${cif_name} ./${cif_folder_name}_L${scale}_${temp}K/${cif_name}
      cd ./${cif_folder_name}_L${scale}_${temp}K
      
      if (${F_flag} == 1) then
        if (${Ncp} >= 1) then
          # CP calculation
          if ("${eDFT}" == "1") then
            cif2cell -p pwscf --pwscf-pseudo-PSLibrary-libdr=$HOME/PSLibrary --pwscf-bin-dir=$HOME/q-e-qe-\*/bin --setup-all --k-resolution=${k_resolution} --pwscf-spin=no --pwscf-force=yes --pwscf-stress=yes --pwscf-run-type=cp -f ${cif_name} --no-reduce --supercell="[$x,$y,$z]" --pwscf-pseudo-priority="-rrkjus","-kjpaw","-dn","-spnl","-spn","-nl","-n","" --pwscf-temperature=${temp} --pwscf-ensemble-DFT=yes 
            sed -i "s/nstep=1000, iprint=100, isave=1000,/nstep=${Ncp}, iprint=${Ncp}, isave=${Ncp},/g" ${cif_folder_name}.cp.in
          else
            cif2cell -p pwscf --pwscf-pseudo-PSLibrary-libdr=$HOME/PSLibrary --pwscf-bin-dir=$HOME/q-e-qe-\*/bin --setup-all --k-resolution=${k_resolution} --pwscf-spin=no --pwscf-force=yes --pwscf-stress=yes --pwscf-run-type=cp -f ${cif_name} --no-reduce --supercell="[$x,$y,$z]" --pwscf-pseudo-priority="-rrkjus","-kjpaw","-dn","-spnl","-spn","-nl","-n","" --pwscf-temperature=${temp}
            sed -i "s/nstep=1000, iprint=100, isave=1000,/nstep=${Ncp}, iprint=${Ncp}, isave=${Ncp},/g" ${cif_folder_name}.cp.in
          endif
        
          cp ${cif_folder_name}.cp.in tmp.cp.in 
          set cell_param_line = `grep -n "CELL_PARAMETERS" tmp.cp.in | sed -e 's/:.*//g'`

          awk -v cpl=${cell_param_line} -v scale=${scale} '{if(NR==(cpl+1)){printf " %19.15f %19.15f %19.15f \n",$1*scale,$2*scale,$3*scale}else{printf "%s \n",$0}}' tmp.cp.in > ${cif_folder_name}.cp.in
          awk -v cpl=${cell_param_line} -v scale=${scale} '{if(NR==(cpl+2)){printf " %19.15f %19.15f %19.15f \n",$1*scale,$2*scale,$3*scale}else{printf "%s \n",$0}}' tmp.cp.in > ${cif_folder_name}.cp.in
          awk -v cpl=${cell_param_line} -v scale=${scale} '{if(NR==(cpl+3)){printf " %19.15f %19.15f %19.15f \n",$1*scale,$2*scale,$3*scale}else{printf "%s \n",$0}}' tmp.cp.in > ${cif_folder_name}.cp.in
        
          mpirun -np ${num_core_pwscf} $HOME/q-e-qe-*/bin/cp.x < ${cif_folder_name}.cp.in | tee ${cif_folder_name}.cp.out
          #
          # MD calculation
          cif2cell -p pwscf --pwscf-pseudo-PSLibrary-libdr=$HOME/PSLibrary --pwscf-bin-dir=$HOME/q-e-qe-\*/bin --setup-all --k-resolution=${k_resolution} --pwscf-spin=no --pwscf-stress=yes --pwscf-run-type=md -f ${cif_name} --no-reduce --supercell="[$x,$y,$z]" --pwscf-temperature=${temp}
          #
          # cif2cell-1.2.40 and cif2cell-1.2.41 version (not recommend them)
          #set cell_param_line = `grep -n "CELL_PARAMETERS" ${cif_folder_name}.md.in | sed -e 's/:.*//g'`
          #awk -v split_line=${cell_param_line} 'NR<split_line{print $0}' ${cif_folder_name}.md.in > tmp.md.in
          #echo "&IONS" >> tmp.md.in
          #echo "  tempw = ${temp} ," >> tmp.md.in
          #echo "/"  >> tmp.md.in
          #awk -v split_line=${cell_param_line} 'NR>=split_line{print $0}' ${cif_folder_name}.md.in >> tmp.md.in
          #
          # >= cif2cell-1.2.42 version
          cp ${cif_folder_name}.md.in tmp.md.in

          cp tmp.md.in ${cif_folder_name}.md.in
          #
          set atomic_position_line = `grep -n "ATOMIC_POSITIONS" ${cif_folder_name}.md.in | sed -e 's/:.*//g'`
          awk -v split_line=${atomic_position_line} 'NR<=split_line{print $0}' ${cif_folder_name}.md.in > tmp.md.in
          #
          set cp_atomic_position_line = `grep -n "ATOMIC_POSITIONS" ${cif_folder_name}.cp.out | sed -e 's/:.*//g'`
          set cp_nat = `grep "nat" ${cif_folder_name}.cp.in | awk '{printf "%d",$3}' | sed -e 's/,//g'`
          set cp_alat = `grep " alat " ${cif_folder_name}.cp.out | awk '{printf "%12.5f",$3}'`
          awk -v split_line=${cp_atomic_position_line} -v cp_nat=${cp_nat} -v cp_alat=${cp_alat} -v nx=${x} -v ny=${y} -v nz=${z} '(split_line<NR && NR<=(split_line+cp_nat)){printf "  %s %19.15f %19.15f %19.15f \n",$1,$2/(cp_alat*nx),$3/(cp_alat*ny),$4/(cp_alat*nz)}' ${cif_folder_name}.cp.out >> tmp.md.in
          #
          set k_points_line = `grep -n "K_POINTS" ${cif_folder_name}.md.in | sed -e 's/:.*//g'`
          awk -v split_line=${k_points_line} 'NR>=split_line{print $0}' ${cif_folder_name}.md.in >> tmp.md.in

          mv ${cif_folder_name}.cp.out ${cif_folder_name}_cp.out
          cp tmp.md.in ${cif_folder_name}.md.in
       
          mpirun -np ${num_core_pwscf} $HOME/q-e-qe-*/bin/pw.x < ${cif_folder_name}.md.in | tee ${cif_folder_name}.xx.out
          #
        else
          # MD calculation
          cif2cell -p pwscf --pwscf-pseudo-PSLibrary-libdr=$HOME/PSLibrary --pwscf-bin-dir=$HOME/q-e-qe-\*/bin --setup-all --k-resolution=${k_resolution} --pwscf-spin=no --pwscf-stress=yes --pwscf-run-type=md -f ${cif_name} --no-reduce --supercell="[$x,$y,$z]" --pwscf-temperature=${temp}
          #
          # cif2cell-1.2.40 and cif2cell-1.2.41 version (not recommend them)
          #set cell_param_line = `grep -n "CELL_PARAMETERS" ${cif_folder_name}.md.in | sed -e 's/:.*//g'`
          #awk -v split_line=${cell_param_line} 'NR<split_line{print $0}' ${cif_folder_name}.md.in > tmp.md.in
          #echo "&IONS" >> tmp.md.in
          #echo "  tempw = ${temp} ," >> tmp.md.in
          #echo "/"  >> tmp.md.in
          #awk -v split_line=${cell_param_line} 'NR>=split_line{print $0}' ${cif_folder_name}.md.in >> tmp.md.in
          #
          # >= cif2cell-1.2.42 version
          cp ${cif_folder_name}.md.in tmp.md.in
    
          set cell_param_line = `grep -n "CELL_PARAMETERS" tmp.*.in | sed -e 's/:.*//g'`

          awk -v cpl=${cell_param_line} -v scale=${scale} '{if(NR==(cpl+1)){printf " %19.15f %19.15f %19.15f \n",$1*scale,$2*scale,$3*scale}else{printf "%s \n",$0}}' tmp.md.in > ${cif_folder_name}.md.in
          awk -v cpl=${cell_param_line} -v scale=${scale} '{if(NR==(cpl+2)){printf " %19.15f %19.15f %19.15f \n",$1*scale,$2*scale,$3*scale}else{printf "%s \n",$0}}' tmp.md.in > ${cif_folder_name}.md.in
          awk -v cpl=${cell_param_line} -v scale=${scale} '{if(NR==(cpl+3)){printf " %19.15f %19.15f %19.15f \n",$1*scale,$2*scale,$3*scale}else{printf "%s \n",$0}}' tmp.md.in > ${cif_folder_name}.md.in
    
          mpirun -np ${num_core_pwscf} $HOME/q-e-qe-*/bin/pw.x < ${cif_folder_name}.md.in | tee ${cif_folder_name}.xx.out
        endif
      else
        # SCF calculation
        cif2cell -p pwscf --pwscf-pseudo-PSLibrary-libdr=$HOME/PSLibrary --pwscf-bin-dir=$HOME/q-e-qe-\*/bin --setup-all --k-resolution=${k_resolution} --pwscf-spin=no --pwscf-force=yes --pwscf-stress=yes --pwscf-run-type=scf -f ${cif_name} --no-reduce --supercell="[$x,$y,$z]"
        cp ${cif_folder_name}.scf.in tmp.scf.in
    
        set cell_param_line = `grep -n "CELL_PARAMETERS" tmp.*.in | sed -e 's/:.*//g'`

        awk -v cpl=${cell_param_line} -v scale=${scale} '{if(NR==(cpl+1)){printf " %19.15f %19.15f %19.15f \n",$1*scale,$2*scale,$3*scale}else{printf "%s \n",$0}}' tmp.scf.in > ${cif_folder_name}.scf.in
        awk -v cpl=${cell_param_line} -v scale=${scale} '{if(NR==(cpl+2)){printf " %19.15f %19.15f %19.15f \n",$1*scale,$2*scale,$3*scale}else{printf "%s \n",$0}}' tmp.scf.in > ${cif_folder_name}.scf.in
        awk -v cpl=${cell_param_line} -v scale=${scale} '{if(NR==(cpl+3)){printf " %19.15f %19.15f %19.15f \n",$1*scale,$2*scale,$3*scale}else{printf "%s \n",$0}}' tmp.scf.in > ${cif_folder_name}.scf.in
    
        mpirun -np ${num_core_pwscf} $HOME/q-e-qe-*/bin/pw.x < ${cif_folder_name}.scf.in | tee ${cif_folder_name}.xx.out
      endif

      cp $HOME/PSLibrary/energy_data_for_isolated_atom ./   
      $HOME/potfit/util/pwscf2force $x $y $z | tee ${cif_folder_name}_L${scale}_${temp}K.config

      if (${F_flag} == 1) then
        awk '{if(NR==1){printf "#N %d 1 \n",$2}else{printf "%s \n",$0}}'  ${cif_folder_name}_L${scale}_${temp}K.config > new_${cif_folder_name}_L${scale}_${temp}K.config
      else
        awk '{if(NR==1){printf "#N %d 0 \n",$2}else{printf "%s \n",$0}}'  ${cif_folder_name}_L${scale}_${temp}K.config > new_${cif_folder_name}_L${scale}_${temp}K.config
      endif
      mv new_${cif_folder_name}_L${scale}_${temp}K.config ${cif_folder_name}_L${scale}_${temp}K.config
      
      awk -v weight=${weight} '{if($1=="#W"){printf "#W %d \n",weight}else{printf "%s \n",$0}}'  ${cif_folder_name}_L${scale}_${temp}K.config > new_${cif_folder_name}_L${scale}_${temp}K.config
      mv new_${cif_folder_name}_L${scale}_${temp}K.config ${cif_folder_name}_L${scale}_${temp}K.config
      
      cat ${cif_folder_name}_L${scale}_${temp}K.config >> ../${filename}.config
    
      cd ..
      @ j = $j + 1
    end
    #
    if ($i == 1) then
      set Vmin = `grep "volume" ./${cif_folder_name}_L${scale}_${temp}K/${cif_folder_name}.xx.out | awk '{printf "%4.1f \n",$4*(0.529177)^3}'`
    endif
    if ($i == ${NV}) then
      set Vmax = `grep "volume" ./${cif_folder_name}_L${scale}_${temp}K/${cif_folder_name}.xx.out | awk '{printf "%4.1f \n",$4*(0.529177)^3}'`
    endif
    #
    @ i = $i + 1
  end
  #
  if ($SCF_flag == 0 && $F_flag == 0) then
    echo " " >> output_table
    echo "Configurations without attributed forces (SCF calculation)" >> output_table
    set SCF_flag = 1
  endif
  set Nc = `echo "${NT} * ${NV}" | bc`
  set Nat = `grep "atoms/cell" ./${cif_folder_name}_L${scale}_${temp}K/${cif_folder_name}.xx.out | awk '{printf "%d \n",$5}'`
  echo "${cif_name}   ${Nc}  ${Nat}   ${weight}   ${Tmin}-${Tmax}   ${Vmin}-${Vmax}   ${Ncp}   ${eDFT}" >> output_table
  #
end

$HOME/potfit/util/correct_config ${filename}
set arr = `sed -n 2p ${filename}.config | sed "s/#C //g" | sed 's/\s*$//'`
set array = `echo "($arr)"`
set total_num_elements = `echo $#array`
echo ${total_num_elements}
#set new_filename = `echo ${arr} | sed "s/ /-/g"`

if ("${total_num_elements}" == "1") then
  if ("${potential_type}" == "eam") then
    makeapot -g -n 1 -i eam -f "morse_sc,csw2_sc,bjs" | tee ${filename}.pot
  else if ("${potential_type}" == "adp") then
    makeapot -g -n 1 -i adp -f "eopp_sc,csw2_sc,bjs,2*csw2_sc" | tee ${filename}.pot
  #else if ("${potential_type}" == "stiweb") then
  #  makeapot -g -n 1 -i stiweb | tee ${filename}.pot
  #else if ("${potential_type}" == "tersoff") then
  #  makeapot -g -n 1 -i tersoff | tee ${filename}.pot
  endif
else if ("${total_num_elements}" == "2") then
  if ("${potential_type}" == "eam") then
    makeapot -g -n 2 -i eam -f "3*morse_sc,2*csw2_sc,2*bjs" | tee ${filename}.pot
  else if ("${potential_type}" == "adp") then
    makeapot -g -n 2 -i adp -f "3*eopp_sc,2*csw2_sc,2*bjs,6*csw2_sc" | tee ${filename}.pot
  #else if ("${potential_type}" == "stiweb") then
  #  makeapot -g -n 2 -i stiweb | tee ${filename}.pot
  #else if ("${potential_type}" == "tersoff") then
  #  makeapot -g -n 2 -i tersoff | tee ${filename}.pot
  endif
else if ("${total_num_elements}" == "3") then
  if ("${potential_type}" == "eam") then
    makeapot -g -n 3 -i eam -f "6*morse,3*csw2,3*bjs" | tee ${filename}.pot
  else if ("${potential_type}" == "adp") then
    makeapot -g -n 3 -i adp -f "6*eopp_sc,3*csw2_sc,3*bjs,12*csw2_sc" | tee ${filename}.pot
  #else if ("${potential_type}" == "stiweb") then
  #  makeapot -g -n 3 -i stiweb | tee ${filename}.pot
  #else if ("${potential_type}" == "tersoff") then
  #  makeapot -g -n 3 -i tersoff | tee ${filename}.pot
  endif
endif

potfit_setup -c ${filename}.config -p ${filename}.pot -s ${filename} | tee param_file

if ("${num_core_potfit}" == "0") then
  set i = 1
  while($i <= $num_core_pwscf)
    set mod = `echo "${num_data} % $i" | bc`
    if("$mod" == "0") then
      set num_core_potfit = $i
    endif
  @ i = $i + 1
  end
endif
if ("${num_core_potfit}" == "1") then
  potfit_apot_${potential_type}_mkl_stress param_file
else
  mpirun -np ${num_core_potfit} potfit_apot_${potential_type}_mkl_mpi_stress param_file
endif

